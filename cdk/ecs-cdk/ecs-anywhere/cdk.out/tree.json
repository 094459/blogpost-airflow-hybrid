{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "@aws-cdk/core.Construct",
          "version": "1.127.0"
        }
      },
      "ecs-anywhere-vpc": {
        "id": "ecs-anywhere-vpc",
        "path": "ecs-anywhere-vpc",
        "children": {
          "mydc-vpn-vpc": {
            "id": "mydc-vpn-vpc",
            "path": "ecs-anywhere-vpc/mydc-vpn-vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "ecs-anywhere-vpc/mydc-vpn-vpc"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnVPC",
                  "version": "1.103.0"
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/24",
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "availabilityZone": "eu-west-2a",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.103.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.127.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.103.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcpublicSubnet1RouteTableF3E55623"
                        },
                        "subnetId": {
                          "Ref": "mydcvpnvpcpublicSubnet1Subnet93B9609B"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.103.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcpublicSubnet1RouteTableF3E55623"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "mydcvpnvpcIGW7CEDA408"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.103.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
                      "version": "1.103.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "mydcvpnvpcpublicSubnet1EIPEA3A7CD0",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "mydcvpnvpcpublicSubnet1Subnet93B9609B"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
                      "version": "1.103.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
                  "version": "1.103.0"
                }
              },
              "publicSubnet2": {
                "id": "publicSubnet2",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.1.0/24",
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "availabilityZone": "eu-west-2b",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.103.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.127.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.103.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcpublicSubnet2RouteTable62CE3964"
                        },
                        "subnetId": {
                          "Ref": "mydcvpnvpcpublicSubnet2Subnet252458EC"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.103.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/publicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcpublicSubnet2RouteTable62CE3964"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "mydcvpnvpcIGW7CEDA408"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.103.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
                  "version": "1.103.0"
                }
              },
              "privateSubnet1": {
                "id": "privateSubnet1",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.2.0/24",
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "availabilityZone": "eu-west-2a",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.103.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.127.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.103.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcprivateSubnet1RouteTableB9CE721C"
                        },
                        "subnetId": {
                          "Ref": "mydcvpnvpcprivateSubnet1Subnet90744793"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.103.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcprivateSubnet1RouteTableB9CE721C"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "mydcvpnvpcpublicSubnet1NATGateway6E86F45F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.103.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
                  "version": "1.103.0"
                }
              },
              "privateSubnet2": {
                "id": "privateSubnet2",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.3.0/24",
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "availabilityZone": "eu-west-2b",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.103.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.127.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "mydcvpnvpcC99028A5"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.103.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcprivateSubnet2RouteTableE4DB4BD2"
                        },
                        "subnetId": {
                          "Ref": "mydcvpnvpcprivateSubnet2Subnet2F863D55"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.103.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-anywhere-vpc/mydc-vpn-vpc/privateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "mydcvpnvpcprivateSubnet2RouteTableE4DB4BD2"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "mydcvpnvpcpublicSubnet1NATGateway6E86F45F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.103.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
                  "version": "1.103.0"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "ecs-anywhere-vpc/mydc-vpn-vpc"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnInternetGateway",
                  "version": "1.103.0"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "ecs-anywhere-vpc/mydc-vpn-vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "mydcvpnvpcC99028A5"
                    },
                    "internetGatewayId": {
                      "Ref": "mydcvpnvpcIGW7CEDA408"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment",
                  "version": "1.103.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ec2.Vpc",
              "version": "1.103.0"
            }
          },
          "VPCId": {
            "id": "VPCId",
            "path": "ecs-anywhere-vpc/VPCId",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.127.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "ecs-anywhere-vpc/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "ecs-anywhere-vpc/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.127.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.127.0"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "ecs-anywhere-vpc/Exports",
            "children": {
              "Output{\"Ref\":\"mydcvpnvpcC99028A5\"}": {
                "id": "Output{\"Ref\":\"mydcvpnvpcC99028A5\"}",
                "path": "ecs-anywhere-vpc/Exports/Output{\"Ref\":\"mydcvpnvpcC99028A5\"}",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.127.0"
                }
              },
              "Output{\"Ref\":\"mydcvpnvpcprivateSubnet1Subnet90744793\"}": {
                "id": "Output{\"Ref\":\"mydcvpnvpcprivateSubnet1Subnet90744793\"}",
                "path": "ecs-anywhere-vpc/Exports/Output{\"Ref\":\"mydcvpnvpcprivateSubnet1Subnet90744793\"}",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.127.0"
                }
              },
              "Output{\"Ref\":\"mydcvpnvpcprivateSubnet2Subnet2F863D55\"}": {
                "id": "Output{\"Ref\":\"mydcvpnvpcprivateSubnet2Subnet2F863D55\"}",
                "path": "ecs-anywhere-vpc/Exports/Output{\"Ref\":\"mydcvpnvpcprivateSubnet2Subnet2F863D55\"}",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnOutput",
                  "version": "1.127.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.127.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.127.0"
        }
      },
      "ecs-anywhere-taskdef": {
        "id": "ecs-anywhere-taskdef",
        "path": "ecs-anywhere-taskdef",
        "children": {
          "hybrid-airflow-ecsrole": {
            "id": "hybrid-airflow-ecsrole",
            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecsrole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecsrole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ssm.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                  "version": "1.103.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.Role",
              "version": "1.103.0"
            }
          },
          "hybrid-airflow-ecscluster": {
            "id": "hybrid-airflow-ecscluster",
            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "hybrid-airflow-cluster"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.127.0"
                }
              },
              "x86AutoScalingGroup": {
                "id": "x86AutoScalingGroup",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceSecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "ecs-anywhere-vpc:ExportsOutputRefmydcvpnvpcC99028A5E0C4BB86"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                          "version": "1.103.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
                      "version": "1.103.0"
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ec2.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnRole",
                          "version": "1.103.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:Submit*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "hybridairflowecscluster7A436173",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ecs:Poll",
                                        "ecs:StartTelemetrySession"
                                      ],
                                      "Condition": {
                                        "ArnEquals": {
                                          "ecs:cluster": {
                                            "Fn::GetAtt": [
                                              "hybridairflowecscluster7A436173",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      },
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "ecs:DiscoverPollEndpoint",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "hybridairflowecsclusterx86AutoScalingGroupInstanceRoleDefaultPolicy69FE5872",
                                "roles": [
                                  {
                                    "Ref": "hybridairflowecsclusterx86AutoScalingGroupInstanceRole935232EC"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                              "version": "1.103.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Policy",
                          "version": "1.103.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Role",
                      "version": "1.103.0"
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          {
                            "Ref": "hybridairflowecsclusterx86AutoScalingGroupInstanceRole935232EC"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnInstanceProfile",
                      "version": "1.103.0"
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": {
                          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
                        },
                        "instanceType": "t2.xlarge",
                        "iamInstanceProfile": {
                          "Ref": "hybridairflowecsclusterx86AutoScalingGroupInstanceProfile6CD4AC0B"
                        },
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "hybridairflowecsclusterx86AutoScalingGroupInstanceSecurityGroup486B716F",
                              "GroupId"
                            ]
                          }
                        ],
                        "userData": {
                          "Fn::Base64": {
                            "Fn::Join": [
                              "",
                              [
                                "#!/bin/bash\necho ECS_CLUSTER=",
                                {
                                  "Ref": "hybridairflowecscluster7A436173"
                                },
                                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
                              ]
                            ]
                          }
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.127.0"
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "desiredCapacity": "1",
                        "launchConfigurationName": {
                          "Ref": "hybridairflowecsclusterx86AutoScalingGroupLaunchConfig39A96B38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "vpcZoneIdentifier": [
                          {
                            "Fn::ImportValue": "ecs-anywhere-vpc:ExportsOutputRefmydcvpnvpcprivateSubnet1Subnet907447937118DADD"
                          },
                          {
                            "Fn::ImportValue": "ecs-anywhere-vpc:ExportsOutputRefmydcvpnvpcprivateSubnet2Subnet2F863D5508703380"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnResource",
                      "version": "1.127.0"
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "lambda.amazonaws.com"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                          ]
                                        ]
                                      }
                                    ],
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                                  "version": "1.103.0"
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "arn:",
                                                    {
                                                      "Ref": "AWS::Partition"
                                                    },
                                                    ":autoscaling:eu-west-2:704533066374:autoScalingGroup:*:autoScalingGroupName/",
                                                    {
                                                      "Ref": "hybridairflowecsclusterx86AutoScalingGroupASG25BA351A"
                                                    }
                                                  ]
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "hybridairflowecscluster7A436173",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "hybridairflowecscluster7A436173",
                                                  "Arn"
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "hybridairflowecscluster7A436173",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "hybridairflowecsclusterx86AutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy3B025241",
                                        "roles": [
                                          {
                                            "Ref": "hybridairflowecsclusterx86AutoScalingGroupDrainECSHookFunctionServiceRole2AE09E99"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                      "version": "1.103.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.Policy",
                                  "version": "1.103.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Role",
                              "version": "1.103.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "role": {
                                  "Fn::GetAtt": [
                                    "hybridairflowecsclusterx86AutoScalingGroupDrainECSHookFunctionServiceRole2AE09E99",
                                    "Arn"
                                  ]
                                },
                                "environment": {
                                  "variables": {
                                    "CLUSTER": {
                                      "Ref": "hybridairflowecscluster7A436173"
                                    }
                                  }
                                },
                                "handler": "index.lambda_handler",
                                "runtime": "python3.6",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                              "version": "1.103.0"
                            }
                          },
                          "AllowInvoke:ecsanywheretaskdefhybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopicE902CCAB": {
                            "id": "AllowInvoke:ecsanywheretaskdefhybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopicE902CCAB",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/AllowInvoke:ecsanywheretaskdefhybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopicE902CCAB",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "hybridairflowecsclusterx86AutoScalingGroupDrainECSHookFunctionD207A6AA",
                                    "Arn"
                                  ]
                                },
                                "principal": "sns.amazonaws.com",
                                "sourceArn": {
                                  "Ref": "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopic9FF83F7F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                              "version": "1.103.0"
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": {
                                      "Ref": "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopic9FF83F7F"
                                    },
                                    "endpoint": {
                                      "Fn::GetAtt": [
                                        "hybridairflowecsclusterx86AutoScalingGroupDrainECSHookFunctionD207A6AA",
                                        "Arn"
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-sns.CfnSubscription",
                                  "version": "1.127.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-sns.Subscription",
                              "version": "1.127.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-lambda.Function",
                          "version": "1.103.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.127.0"
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "autoscaling.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.103.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Ref": "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopic9FF83F7F"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy7AED890E",
                                    "roles": [
                                      {
                                        "Ref": "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookRole06266C34"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.103.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.103.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.103.0"
                        }
                      },
                      "Topic": {
                        "id": "Topic",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-sns.CfnTopic",
                              "version": "1.127.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-sns.Topic",
                          "version": "1.127.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ecscluster/x86AutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": {
                              "Ref": "hybridairflowecsclusterx86AutoScalingGroupASG25BA351A"
                            },
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "notificationTargetArn": {
                              "Ref": "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookTopic9FF83F7F"
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "hybridairflowecsclusterx86AutoScalingGroupLifecycleHookDrainHookRole06266C34",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnResource",
                          "version": "1.127.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.127.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Resource",
                  "version": "1.127.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Resource",
              "version": "1.127.0"
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "ecs-anywhere-taskdef/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnParameter",
              "version": "1.127.0"
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "ecs-anywhere-taskdef/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "constructInfo": {
              "fqn": "@aws-cdk/core.Resource",
              "version": "1.127.0"
            }
          },
          "hybrid-airflow-ApacheAirflowTaskDef": {
            "id": "hybrid-airflow-ApacheAirflowTaskDef",
            "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.103.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.103.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "cpu": 100,
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              "704533066374.dkr.ecr.eu-west-2.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/hybrid-airflow:airflw"
                            ]
                          ]
                        },
                        "memory": 1024,
                        "name": "Hybrid-ELT-TaskDef",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "LogGroupF5B46931"
                            },
                            "awslogs-stream-prefix": "hybrid-airflow",
                            "awslogs-region": "eu-west-2"
                          }
                        }
                      }
                    ],
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "hybridairflowApacheAirflowTaskDefExecutionRole23D3CB5F",
                        "Arn"
                      ]
                    },
                    "family": "apache-airflow",
                    "networkMode": "host",
                    "requiresCompatibilities": [
                      "EC2"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "hybridairflowApacheAirflowTaskDefTaskRole5081E9BE",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.127.0"
                }
              },
              "Hybrid-ELT-TaskDef": {
                "id": "Hybrid-ELT-TaskDef",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/Hybrid-ELT-TaskDef",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.127.0"
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/ExecutionRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.103.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-anywhere-taskdef/hybrid-airflow-ApacheAirflowTaskDef/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:eu-west-2:704533066374:repository/hybrid-airflow"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "ecr:GetAuthorizationToken",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LogGroupF5B46931",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "hybridairflowApacheAirflowTaskDefExecutionRoleDefaultPolicy32A07870",
                            "roles": [
                              {
                                "Ref": "hybridairflowApacheAirflowTaskDefExecutionRole23D3CB5F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.103.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.103.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.103.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Resource",
              "version": "1.127.0"
            }
          },
          "Hybrid-ELT-Repo": {
            "id": "Hybrid-ELT-Repo",
            "path": "ecs-anywhere-taskdef/Hybrid-ELT-Repo",
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
              "version": "1.103.0"
            }
          },
          "LogGroup": {
            "id": "LogGroup",
            "path": "ecs-anywhere-taskdef/LogGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-anywhere-taskdef/LogGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "logGroupName": "/ecs/hybrid-airflow",
                    "retentionInDays": 731
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.127.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Resource",
              "version": "1.127.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "ecs-anywhere-taskdef/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "ecs-anywhere-taskdef/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.127.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.127.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.127.0"
        }
      },
      "ecs-anywhere-cluster": {
        "id": "ecs-anywhere-cluster",
        "path": "ecs-anywhere-cluster",
        "children": {
          "hybrid-airflow-role": {
            "id": "hybrid-airflow-role",
            "path": "ecs-anywhere-cluster/hybrid-airflow-role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-anywhere-cluster/hybrid-airflow-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ssm.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                  "version": "1.103.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.Role",
              "version": "1.103.0"
            }
          },
          "Hybrid-ELT-Repo": {
            "id": "Hybrid-ELT-Repo",
            "path": "ecs-anywhere-cluster/Hybrid-ELT-Repo",
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
              "version": "1.103.0"
            }
          },
          "hybrid-airflow-extcluster": {
            "id": "hybrid-airflow-extcluster",
            "path": "ecs-anywhere-cluster/hybrid-airflow-extcluster",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
              "aws:cdk:cloudformation:props": {
                "clusterName": "hybrid-airflow-extcluster"
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnResource",
              "version": "1.127.0"
            }
          },
          "hybrid-airflow-exttask": {
            "id": "hybrid-airflow-exttask",
            "path": "ecs-anywhere-cluster/hybrid-airflow-exttask",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
              "aws:cdk:cloudformation:props": {
                "containerDefinitions": [
                  {
                    "name": "elt-remote",
                    "image": {
                      "Fn::Join": [
                        "",
                        [
                          "704533066374.dkr.ecr.eu-west-2.",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/hybrid-airflow:airflw"
                        ]
                      ]
                    },
                    "memory": 256,
                    "cpu": 256,
                    "essential": true,
                    "command": [
                      "ricsue-airflow-hybrid",
                      "period1/hq-data.csv",
                      "select * from customers WHERE location = \"Spain\"",
                      "rds-airflow-hybrid",
                      "eu-west-2"
                    ],
                    "logConfiguration": {
                      "logDriver": "awslogs",
                      "options": {
                        "awslogs-group": "/ecs/test-external",
                        "awslogs-region": "eu-west-2",
                        "awslogs-stream-prefix": "ecs"
                      }
                    }
                  }
                ],
                "cpu": "1024",
                "family": "apache-airflow",
                "memory": "1024",
                "networkMode": "host",
                "requiresCompatibilities": [
                  "EXTERNAL"
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnResource",
              "version": "1.127.0"
            }
          },
          "ECSAnyWhereIamRole": {
            "id": "ECSAnyWhereIamRole",
            "path": "ecs-anywhere-cluster/ECSAnyWhereIamRole",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.127.0"
            }
          },
          "ECSClusterName": {
            "id": "ECSClusterName",
            "path": "ecs-anywhere-cluster/ECSClusterName",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.127.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "ecs-anywhere-cluster/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "ecs-anywhere-cluster/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.127.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.127.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.127.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "@aws-cdk/core.App",
      "version": "1.127.0"
    }
  }
}